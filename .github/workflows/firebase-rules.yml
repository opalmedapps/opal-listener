name: Firebase Rules
run-name: Working on deployment of Firebase rules ðŸš€
on:
  # TODO restrict to main branch
#  push:
#    branches:
#      - OP-93.SB.github-actions
#    paths:
#      - 'firebase/dev/database.rules.json'
#  workflow_dispatch:
#    inputs:
#      ENVIRONMENT:
#        description: 'Environment to deploy rules'
#        type: choice
#        required: true
#        default: 'dev'
#        options:
#          - dev
#          - other

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      # Setup
      - name: Convert environment to all caps
        run: echo "ENVIRONMENT_CAPS=${ENVIRONMENT^^}" >> $GITHUB_ENV
      - name: Print environment
        run: |
          echo "Environment: $ENVIRONMENT ($ENVIRONMENT_CAPS)"
      - uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.14.X'
      - name: Check npm installation
        run: npm -v
      - name: Install firebase-tools
        run: |
          npm install -g firebase-tools
          firebase --version

      # Deployment of Firebase rules
      # Deployment implicitly uses a service account assigned to $GOOGLE_APPLICATION_CREDENTIALS below (from values defined in the GitHub project settings)
      # See: https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/workflow-commands-for-github-actions#setting-an-environment-variable
      # This service account provides permissions for editing Firebase rules
      - name: Read the service account needed to deploy to Firebase
        # See: https://stackoverflow.com/questions/61255989/dynamically-retrieve-github-actions-secret
        run: |
          echo '${{ secrets[format('{0}_GOOGLE_APPLICATION_CREDENTIALS', env.ENVIRONMENT_CAPS)] }}' > google-application-credentials.json
          echo "GOOGLE_APPLICATION_CREDENTIALS=`readlink -f google-application-credentials.json`" >> $GITHUB_ENV
      - name: Deploy rules to Firebase
        working-directory: ./firebase/${{ env.ENVIRONMENT }}
        run: firebase deploy --only database
