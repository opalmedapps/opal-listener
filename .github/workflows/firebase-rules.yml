# SPDX-FileCopyrightText: Copyright 2025 Opal Health Informatics Group at the Research Institute of the McGill University Health Centre <john.kildea@mcgill.ca>
#
# SPDX-License-Identifier: AGPL-3.0-or-later

# This workflow is explained in `docs/source/ci-cd-workflows.md`; please keep that documentation file up to date when making changes here.

name: Firebase Rules
# Default to dev when running automatically (see also "env" below)
run-name: Deploying Firebase rules for ${{ inputs.ENVIRONMENT || 'dev' }} ðŸš€
on:
  # When the database rules are changed, automatically deploy to dev
  push:
    branches:
      - main
    paths:
      - 'firebase/database.rules.json'

  # Offer a manual interface to deploy to all other environments as needed
  workflow_dispatch:
    inputs:
      ENVIRONMENT:
        description: 'Environment in which to deploy rules'
        type: choice
        required: true
        default: 'dev'
        options:
          - dev
          - prod

# Read the target environment from workflow_dispatch inputs, or default to dev
env:
  ENVIRONMENT: ${{ inputs.ENVIRONMENT || 'dev' }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      # Setup
      - name: Convert environment to all caps
        run: echo "ENVIRONMENT_CAPS=${ENVIRONMENT^^}" >> $GITHUB_ENV
      - name: Print environment
        run: |
          echo "Environment: $ENVIRONMENT ($ENVIRONMENT_CAPS)"
      - uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.14.X'
      - name: Check npm installation
        run: npm -v
      - name: Install firebase-tools
        run: |
          npm install -g firebase-tools
          firebase --version

      # Deploy Firebase rules
      # Deployment implicitly uses a service account assigned to $GOOGLE_APPLICATION_CREDENTIALS below (from values defined in the GitHub project settings)
      # This service account provides permissions for editing Firebase rules
      - name: Read the service account needed to deploy to Firebase
        # See: https://stackoverflow.com/questions/61255989/dynamically-retrieve-github-actions-secret
        # See: https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/workflow-commands-for-github-actions#setting-an-environment-variable
        run: |
          echo '${{ secrets[format('{0}_GOOGLE_APPLICATION_CREDENTIALS', env.ENVIRONMENT_CAPS)] }}' > google-application-credentials.json
          echo "GOOGLE_APPLICATION_CREDENTIALS=`readlink -f google-application-credentials.json`" >> $GITHUB_ENV
      - name: Specify which Firebase project to use
        working-directory: ./firebase
        # Replace the <PROJECT-ID> placeholder with the project ID stored in a repository variable
        run: sed -i 's/<PROJECT-ID>/${{ vars[format('{0}_FIREBASE_PROJECT_ID', env.ENVIRONMENT_CAPS)] }}/' .firebaserc
      - name: Deploy rules to Firebase
        working-directory: ./firebase
        run: firebase deploy --only database
