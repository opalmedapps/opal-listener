# SPDX-FileCopyrightText: Copyright (C) 2025 Opal Health Informatics Group at the Research Institute of the McGill University Health Centre <john.kildea@mcgill.ca>
#
# SPDX-License-Identifier: AGPL-3.0-or-later
name: CI

on:
  push:
    branches:
      - main
      # TODO testing
      - SB.check-thirdparty-notice
  pull_request:
  workflow_dispatch:
  merge_group:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  lint-eslint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.2.2
        with:
          persist-credentials: false
      - name: Install GitHub Actions formatter
        run: npm install eslint-formatter-gha --no-save
      - name: Print eslint version
        run: npx eslint --version
      - name: Run eslint
        run: npx eslint --format gha src/**/*.js

  lint-pre-commit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.2.2
        with:
          persist-credentials: false
      - uses: mschoettle/pre-commit-action@v4.2.3
        if: '!cancelled()'
        env:
          SKIP: reuse-lint-file

  run-reuse-workflow:
    uses: opalmedapps/.github/.github/workflows/reuse.yaml@main

  check-thirdparty-notice:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.2.2
        with:
          persist-credentials: false
      # TODO testing
      - uses: opalmedapps/actions/actions/check-thirdparty-notice@SB.check-thirdparty-notice
        with:
          package-file: './package.json'

  test-and-coverage:
    runs-on: ubuntu-latest
    steps:
      # Setup
      - uses: actions/checkout@v4.2.2
        with:
          persist-credentials: false
      - name: Install dependencies
        run: npm ci
      - name: Print mocha version
        run: npx mocha --version

      # Run coverage evaluation
      - name: Run nyc / cobertura
        run: |
          npx nyc --all --reporter cobertura mocha --reporter json --reporter-option output=mocha-report.json './src/**/*.test.*' './listener/**/*.test.*' './legacy-registration/**/*.test.*'
          npx nyc report

      # Format the test output for GitHub
      - name: Report test results
        uses: dorny/test-reporter@v2.1.0
        # Run this step even if the previous step failed
        if: ${{ !cancelled() }}
        with:
          name: Mocha Tests
          path: mocha-report.json
          reporter: mocha-json

      # Format the coverage output for GitHub
      - name: Report coverage results
        uses: irongut/CodeCoverageSummary@v1.3.0
        # Run this step even if the previous step failed
        if: ${{ !cancelled() }}
        with:
          filename: coverage/cobertura-coverage.xml
          badge: true
          fail_below_min: false
          format: markdown
          output: both
      - name: Add the coverage report to the job summary
        # Run this step even if the previous step failed
        if: ${{ !cancelled() }}
        run: cat code-coverage-results.md >> "$GITHUB_STEP_SUMMARY"

  build-image:
    needs: [lint-eslint, lint-pre-commit, test-and-coverage]
    permissions:
      contents: read
      packages: write
    uses: opalmedapps/.github/.github/workflows/docker-build.yaml@main
    with:
      test-command: node /app/src/utility/version
