//@license: MIT
// Try playing around with the values below :D
@fragments: 6;
@radius: 32px;
@loader-radius: 32px;
@fragment-size: 8px;
@fragment-blur-size: 0px;
@fragment-roundness: 0%;
@loader-background: rgba(0,0,0,0.1);
@fragment-color-start: rgba(0,0,0,0);
@fragment-color-start-pos: 50%;
@fragment-color-mid: rgba(0,0,0,1);
@fragment-color-mid-pos: 60%;
@fragment-color-end: rgba(0,0,0,0);
@fragment-time: 1s;
@delay-time: 0s;
@parts: 1;
.js-handle {
	width: unit(@fragments, px); // pass fragments through width
	display: none;
}
.loader {
  position: absolute;
  top: 50%;
  left: 50%;
  width: @loader-radius*2;
  height: @loader-radius*2;
  background-color: @loader-background;
  transform: translate(-50%, -50%);
	border-radius: 50%;
}
.fragment-holder {
  position: absolute;
  top: 50%;
  left: 50%;
}
.loop(@i) when (@i > 0) {
	.loop(@i - 1);
	.fragment-holder.n@{i} {
		transform: translate(-50%, -50%) rotate(360deg / @fragments * @i);
		.fragment {
			animation-delay: @fragment-time / @max-percent / @fragments * mod((@i - 1), ( @fragments / @parts)) * @parts;
		}
	}
}
.loop(@fragments);
.fragment {
  width: @fragment-size;
  height: @fragment-size;
  background: transparent;
	transform: none;
	animation-name: "fragment-animation";
	animation-duration: @fragment-time / @max-percent;
	animation-iteration-count: infinite;
	animation-timing-function: linear;
	border-radius: @fragment-roundness;
	box-shadow: 0 0 @fragment-blur-size @fragment-blur-size transparent;
}
@max-percent:  @fragment-time / (@fragment-time + @delay-time);
@n-start-pos: unit(@max-percent * @fragment-color-start-pos, %);
@n-mid-pos: unit(@max-percent * @fragment-color-mid-pos, %);
@n-last-percent: unit(@max-percent * 100%, %);
@keyframes fragment-animation {
	0% {
		background-color:@fragment-color-start;
		box-shadow: 0 0 @fragment-blur-size @fragment-blur-size @fragment-color-start;
		transform: translateY(0);
	}
	@{n-start-pos} {
		background-color:@fragment-color-start;
		box-shadow: 0 0 @fragment-blur-size @fragment-blur-size @fragment-color-start;
	}
	@{n-mid-pos} {
		background-color:@fragment-color-mid;
		box-shadow: 0 0 @fragment-blur-size @fragment-blur-size @fragment-color-mid;
	}
	@{n-last-percent} {
		background-color:@fragment-color-end;
		transform: translateY(@radius);
		box-shadow: 0 0 @fragment-blur-size @fragment-blur-size @fragment-color-end;
	}
	100% {
		background-color:@fragment-color-end;
		transform: translateY(@radius);
		box-shadow: 0 0 @fragment-blur-size @fragment-blur-size @fragment-color-end;
	}
}